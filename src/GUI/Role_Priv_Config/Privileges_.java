/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Role_Priv_Config;

import BLL.GetData;
import BLL.UpdateData;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author HieuThao
 */
public class Privileges_ extends javax.swing.JFrame {

    /**
     * Creates new form Privileges_
     */
    public Privileges_() {
        initComponents();
         setLocationRelativeTo (null);
         LoadComboBoxObjectName();
         LoadComboBoxUserName();
    }
    private GetData x = new GetData();
     private UpdateData up = new UpdateData();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel2 = new javax.swing.JPanel();
        cbo_objectname = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        ckb_insert = new javax.swing.JCheckBox();
        ckb_delete = new javax.swing.JCheckBox();
        cbk_update = new javax.swing.JCheckBox();
        ckb_select = new javax.swing.JCheckBox();
        btn_InsertPriv = new javax.swing.JButton();
        btn_Revoke = new javax.swing.JButton();
        ckb_all = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        cbo_Username = new javax.swing.JComboBox<>();
        ck_grantoption = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        Panel2.setBackground(new java.awt.Color(255, 255, 255));
        Panel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        Panel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbo_objectname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_objectname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_objectnameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Đối tượng");

        ckb_insert.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ckb_insert.setText("INSERT");

        ckb_delete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ckb_delete.setText("DELETE");

        cbk_update.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbk_update.setText("UPDATE");

        ckb_select.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ckb_select.setText("SELECT");

        btn_InsertPriv.setText("Cấp quyền");
        btn_InsertPriv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_InsertPrivMousePressed(evt);
            }
        });
        btn_InsertPriv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InsertPrivActionPerformed(evt);
            }
        });

        btn_Revoke.setText("Thu hồi");
        btn_Revoke.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_RevokeMousePressed(evt);
            }
        });
        btn_Revoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RevokeActionPerformed(evt);
            }
        });

        ckb_all.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ckb_all.setText("TẤT CẢ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("User");

        cbo_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_UsernameActionPerformed(evt);
            }
        });

        ck_grantoption.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ck_grantoption.setText("with grant option");

        javax.swing.GroupLayout Panel2Layout = new javax.swing.GroupLayout(Panel2);
        Panel2.setLayout(Panel2Layout);
        Panel2Layout.setHorizontalGroup(
            Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Panel2Layout.createSequentialGroup()
                        .addComponent(ckb_insert)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_delete)
                        .addGap(18, 18, 18)
                        .addComponent(cbk_update)
                        .addGap(18, 18, 18)
                        .addComponent(ckb_select)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckb_all))
                    .addGroup(Panel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbo_objectname, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72)
                .addGroup(Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel2Layout.createSequentialGroup()
                        .addComponent(btn_InsertPriv, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btn_Revoke, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(cbo_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ck_grantoption)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel2Layout.setVerticalGroup(
            Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbo_objectname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cbo_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ck_grantoption))
                .addGap(18, 18, 18)
                .addGroup(Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckb_insert)
                    .addComponent(ckb_delete)
                    .addComponent(cbk_update)
                    .addComponent(ckb_select)
                    .addComponent(ckb_all)
                    .addComponent(btn_InsertPriv, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Revoke, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbo_objectnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_objectnameActionPerformed
        // TODO add your handling code here:
        loadpriv ();
    }//GEN-LAST:event_cbo_objectnameActionPerformed
    private void loadpriv()
    {
        try
        {
            for(Component com : Panel2.getComponents ())
            {
                    if(com instanceof JCheckBox)
                    {
                        JCheckBox box = (JCheckBox)com;
                        box.setSelected (false);
                    }
            }
           String Obj = cbo_objectname.getSelectedItem().toString();
            String user = cbo_Username.getSelectedItem().toString();
            ArrayList arr = x.getPrivToObject ( Obj,user);
            if(arr.size () ==0)
            {
                for(Component com : Panel2.getComponents ())
                {
                    if(com instanceof JCheckBox)
                    {
                        JCheckBox box = (JCheckBox)com; 
                        box.setSelected (false);
                    }
                }
            }
            else
            {
                for(int i = 0; i<arr.size ();i++)
                {
                    String priv = arr.get (i).toString ();
                        for(Component com : Panel2.getComponents ())
                    {
                        if(com instanceof JCheckBox)
                        {
                            JCheckBox box = (JCheckBox)com;

                            String ckbselect = box.getText ();
                            if(priv.compareTo (ckbselect) ==0)
                            {
                                box.setSelected (true);
                                break;
                            }
                        }
                    }
                }
            }
            
        
        }
        catch(Exception ex)
        {
                
        }
    }    
    private void btn_InsertPrivMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_InsertPrivMousePressed
        // TODO add your handling code here:
        String priv = "";
        String obj = cbo_objectname.getSelectedItem ().toString ();
        String user = cbo_Username.getSelectedItem().toString();
        
        if(ckb_all.isSelected ())
        {
            if(ck_grantoption.isSelected())
            {
                if(up.grantAllPrivToUserGrantOption(user,obj))
                {
                    JOptionPane.showMessageDialog(this, String.format ("Cấp quyền cho %s thành công!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    loadpriv();
                }
                else
                {
                     JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thất bại!",user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                }
                
            }
            else
            {
                if(up.grantAllPrivToUser(user,obj))
                {
                    JOptionPane.showMessageDialog(this, String.format ("Cấp quyền cho %s thành công!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                loadpriv();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, String.format ("Cấp quyền cho %s thành công!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                loadpriv();
                }
                
            }
        }
        else
        {
            for(Component com : Panel2.getComponents ())
            {
                if(com instanceof JCheckBox)
                {
                    JCheckBox box = (JCheckBox)com;
                    if(box.isSelected ())
                    {
                        priv += box.getText ()+ ",";
                    }
                }
            }
            try
            {
                if(ck_grantoption.isSelected())
                {
                    if(up.grantPrivToUserGrantOption(user, obj, priv.substring (0,priv.length ()-1)))
                    {
                        JOptionPane.showMessageDialog(this, String.format ("Cấp quyền cho %s thành công!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                        loadpriv ();
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thất bại!",user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    }
                            
                    
                }
                else
                {
                    if(up.grantPrivToUser(user, obj, priv.substring (0,priv.length ()-1)))
                    {
                        JOptionPane.showMessageDialog(this, String.format ("Cấp quyền cho %s thành công!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                        loadpriv ();
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thất bại!",user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, String.format ("Quyền %s có thể đã được cấp! Vui lòng kiểm tra lại!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }//GEN-LAST:event_btn_InsertPrivMousePressed
   
    private void btn_RevokeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_RevokeMousePressed
        // TODO add your handling code here:
        
        String priv = "";
        String obj = cbo_objectname.getSelectedItem ().toString ();
        String user = cbo_Username.getSelectedItem().toString();
        if(ckb_all.isSelected ())
        {
             
                    if(up.revokeAllPrivToUser(user, obj))
                    {
                    JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thành công!", user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    loadpriv();
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thất bại!",user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    }
        }
        else
        {
            for(Component com : Panel2.getComponents ())
            {
                if(com instanceof JCheckBox)
                {
                    JCheckBox box = (JCheckBox)com;
                    if(box.isSelected ())
                    {
                        priv += box.getText () + ",";
                    }
                }
            }
            try {
                
                    if(up.revokePrivToUser(user,obj,priv.substring (0,priv.length ()-1)))
                    {
                        JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thành công!",user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    loadpriv ();
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(this, String.format ("Thu hồi quyền cho %s thất bại!",user),"Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    }
                
            } catch ( Exception e ) {
            }
        }
    }//GEN-LAST:event_btn_RevokeMousePressed
    private void LoadComboBoxUserName()
    {
        ArrayList tableName = x.getAllUserName();
        for(var e:tableName)
        {
            cbo_Username.addItem(e.toString());
        }
    }
    private void LoadComboBoxObjectName()
    {
        ArrayList tableName = x.getTableName();
        for(var e:tableName)
        {
            cbo_objectname.addItem(e.toString());
        }
    }
    private void cbo_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_UsernameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbo_UsernameActionPerformed

    private void btn_InsertPrivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InsertPrivActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_InsertPrivActionPerformed

    private void btn_RevokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RevokeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_RevokeActionPerformed
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel2;
    private javax.swing.JButton btn_InsertPriv;
    private javax.swing.JButton btn_Revoke;
    private javax.swing.JCheckBox cbk_update;
    private javax.swing.JComboBox<String> cbo_Username;
    private javax.swing.JComboBox<String> cbo_objectname;
    private javax.swing.JCheckBox ck_grantoption;
    private javax.swing.JCheckBox ckb_all;
    private javax.swing.JCheckBox ckb_delete;
    private javax.swing.JCheckBox ckb_insert;
    private javax.swing.JCheckBox ckb_select;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
